{"name": "test_access[baseinfo0]", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <testcases.test_login.TestLogin object at 0x000000000483EE20>\nbaseinfo = {'base': {'base_url': 'https://api.wy56.com/test/wms-api', 'index_url': 'https://www.wy56.com/test/h5/keyi-wms/', 'pre...: 'Bearer'}, 'log': {'log_fomat': '[%(asctime)s] %(filename)s->%(funcname)s', 'log_level': 'info', 'log_name': 'log_'}}\n\n    @allure.feature('访问首页')\n    @pytest.mark.parametrize('baseinfo', YamlUtil().read_yamlfile('config.yaml'))\n    def test_access(self, baseinfo ):\n        url = baseinfo['base']['index_url']\n        data = \"\"\n        rep = RequestUtil().send_request(\"get\", url, data,None)\n        log = LogUtil().log_rec('访问首页')\n        log.info('访问首页')\n        log.info(\"预期测试结果返回:200000\")\n>       log.info(\"实际测试结果返回:\"+str(json.loads(rep)[\"code\"]))\n\ntestcases\\test_login.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\lib\\json\\__init__.py:357: in loads\n    return _default_decoder.decode(s)\n..\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x0000000002DEDA60>\ns = '<!DOCTYPE html>\\n<html lang=\"zh-cmn-Hans\">\\n    <head>\\n        <meta charset=\"utf-8\" />\\n        <meta content=\"IE=e...static/js/chunk-vendors.js\"></script><script type=\"text/javascript\" src=\"static/js/app.js\"></script></body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n..\\lib\\json\\decoder.py:355: JSONDecodeError"}, "attachments": [{"name": "log", "source": "0f818b5d-d344-496f-908e-98901cb0c845-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "baseinfo", "value": "{'base': {'index_url': 'https://www.wy56.com/test/h5/keyi-wms/', 'base_url': 'https://api.wy56.com/test/wms-api', 'pre_auth': 'Bearer'}, 'log': {'log_name': 'log_', 'log_level': 'info', 'log_fomat': '[%(asctime)s] %(filename)s->%(funcname)s'}}"}], "start": 1645764775950, "stop": 1645764776026, "uuid": "bd85c9b8-0884-45fe-a107-057858317b31", "historyId": "5b0a7db180a2b5368fce55236eab171c", "testCaseId": "b08964ae3fa73555d7283c859d1eec50", "fullName": "testcases.test_login.TestLogin#test_access", "labels": [{"name": "feature", "value": "访问首页"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "HXPSPQYBEZK8JRT"}, {"name": "thread", "value": "599752-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_login"}]}