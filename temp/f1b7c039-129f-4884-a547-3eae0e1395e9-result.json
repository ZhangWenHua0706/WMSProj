{"name": "test_inorder[datainfo0-baseinfo0-caseinfo0]", "status": "broken", "statusDetails": {"message": "TypeError: request() got an unexpected keyword argument 'encoding'", "trace": "self = <testcases.test_instore.TestInOrder object at 0x0000000004856250>\nbaseinfo = {'base': {'base_url': 'https://api.wy56.com/test/wms-api', 'index_url': 'https://www.wy56.com/test/h5/keyi-wms/', 'pre...: 'Bearer'}, 'log': {'log_fomat': '[%(asctime)s] %(filename)s->%(funcname)s', 'log_level': 'info', 'log_name': 'log_'}}\ncaseinfo = {'name': '$csv{name}', 'parameters': {'name-login-assert_str': 'test_inorder.csv'}, 'requests': {'data': {'amtInfos': ..., 'method': 'post', 'url': '/wms/instore/bill/saveOrUpdate'}, 'validate': {'assert_str': '2000000', 'equals': 2000000}}\ndatainfo = {'amtInfos': '[]', 'assert_str': '2000000', 'custName': '上海通用汽车广州经销商', 'goodsBarcode': '', ...}\n\n    @allure.feature('创建入库单测试')\n    @pytest.mark.parametrize('caseinfo', YamlUtil().read_test_yamlfile('test_inorder.yaml'))\n    @pytest.mark.parametrize('baseinfo', YamlUtil().read_yamlfile('config.yaml'))\n    @pytest.mark.parametrize('datainfo', DataUtil().csv_read('test_inorder.csv'))\n    def test_inorder(self, baseinfo, caseinfo, datainfo):\n        method = caseinfo[\"requests\"][\"method\"]\n        post_type = \"json\"\n        last_url = baseinfo[\"base\"][\"base_url\"] + caseinfo[\"requests\"][\"url\"]\n        caseinfo[\"requests\"][\"data\"] = DictUtil().dict_handle_recursive(caseinfo[\"requests\"][\"data\"], datainfo)\n        assert_str = DictUtil().search_key(caseinfo[\"validate\"], datainfo)\n        auth_header = YamlUtil().read_extract_yaml(\"extract.yaml\")\n        print(auth_header)\n        headers = {\n            \"authorization\":auth_header,\n            \"Content-Type\":\"application/json\"}\n>       rep = RequestUtil().send_request(method, last_url, caseinfo[\"requests\"][\"data\"], post_type,headers=headers)\n\ntestcases\\test_instore.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.request_util.RequestUtil object at 0x0000000004856D90>\nmethod = 'post'\nurl = 'https://api.wy56.com/test/wms-api/wms/instore/bill/saveOrUpdate'\ndata = '{\"id\": \"null\", \"inbillOrgId\": \"27\", \"isConfirmIn\": \"0\", \"isDetail\": \"0\", \"inbillNumber\": \"\", \"inbillCreateTime\": \"202... \"inbillInfoReceiptUserId\": \"26\", \"inbillInfoReceiptUserName\": \"上海管理\", \"inbillInfoGoodsCount\": \"5\"}, \"amtInfos\": \"[]\"}'\npost_type = 'json'\nkwargs = {'headers': {'Content-Type': 'application/json', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIyNiIsImp0aSI...RkZjA3MDQyN2M4MGE2YzBmNDMyZjg2YjU5IiwiaWF0IjoxNjQ2MDI4OTQ0LCJ0eXBlIjoxfQ.ZV-bybVnNxq1XJAWDs2I75fY83J2IK0hANlf_jpgmfI'}}\nproxies = {'http': '127.0.0.1:7970', 'https': '127.0.0.1:7970'}\n\n    def send_request(self, method, url, data,post_type, **kwargs):\n        proxies = {\n            \"https\":\"127.0.0.1:7970\",\n            \"http\":\"127.0.0.1:7970\"\n        }\n        method = str(method).lower()\n        if method == 'get':\n            rep = RequestUtil.session.request(method, url=url, params=data)\n        elif method == 'post':\n            if post_type == \"form\":\n                rep = RequestUtil.session.request(method, url=url, data=data,proxies=proxies,verify=False)\n            elif post_type == \"json\":\n                data = json.dumps(data,ensure_ascii=False)\n>               rep = RequestUtil.session.request(method, url=url, data=data,encoding='utf-8',proxies=proxies,verify=False)\nE               TypeError: request() got an unexpected keyword argument 'encoding'\n\ncommon\\request_util.py:21: TypeError"}, "parameters": [{"name": "datainfo", "value": "{'name': '创建入库单', 'story': '正常下单', 'id': 'null', 'inbillOrgId': '27', 'isConfirmIn': '0', 'isDetail': '0', 'inbillNumber': '', 'inbillCreateTime': '2022-02-28 09:48:38', 'inbillTime': '', 'inbillType': '1', 'inbillCreateUserId': '26', 'inbillCreateUserName': '上海管理', 'inbillCustId': '76', 'inbillCustomerId': '32', 'inbillOrderNo': '', 'inbillRemark': '测试入库备注', 'inbillCustName': '上海通用汽车广州经销商', 'goodsCustomerId': '32', 'goodsId ': '3079', 'goodsCustId': '87', 'goodsCustName': '李群', 'goodsIden': '0003028', 'goodsCode': 'lt001', 'goodsName': '轮胎001', 'goodsSpecification': '10', 'goodsUnitId': '206', 'goodsUnitDesc': '100片/箱', 'goodsBoxSpecification': '', 'goodsManufacturer': '', 'goodsCategoryId': 'null', 'goodsCategoryDesc': '', 'goodsBarcode': '', 'goodsMaxNumber': '', 'goodsMinNumber': '', 'goodsUnitVolume': '0.0037', 'goodsUnitWeight': '0.0346', 'goodsTrayArea': '', 'goodsSingleTrayMaxStart': '10', 'goodsSingleTrayMaxEnd': '20', 'goodsHalfTrayMaxStart': '5', 'goodsHalfTrayMaxEnd': '9', 'goodsEnable': '1', 'goodsEnableDesc': '启用', 'goodsExtendCode': 'luntai001', 'goodsOriginPlace': '', 'goodsSuite': 'null', 'goodsSuiteDesc': 'null', 'goodsFrom': 'null', 'goodsFromDesc': '', 'goodsRemarks': 'lt001备注', 'goodsCreateTime': '2021-12-10 16:25:24', 'goodsBrandId': 'null', 'goodsBrandDesc': '', 'goodsExpireDate': '', 'custName': '上海通用汽车广州经销商', 'goodsSingleTrayDesc': '10.0-20.0箱', 'goodsHalfTrayMaxDesc': '5.0-9.0箱', 'show': 'false', 'index': '0', 'inbillInfoFreeze': '1', 'inbillInfoMaterial': '1', 'inbillInfoGoodsId': '3079', 'inbillInfoReceiptUserId': '26', 'inbillInfoReceiptUserName': '上海管理', 'inbillInfoGoodsCount': '5', 'amtInfos': '[]', 'assert_str': '2000000'}"}, {"name": "baseinfo", "value": "{'base': {'index_url': 'https://www.wy56.com/test/h5/keyi-wms/', 'base_url': 'https://api.wy56.com/test/wms-api', 'pre_auth': 'Bearer'}, 'log': {'log_name': 'log_', 'log_level': 'info', 'log_fomat': '[%(asctime)s] %(filename)s->%(funcname)s'}}"}, {"name": "caseinfo", "value": "{'name': '$csv{name}', 'parameters': {'name-login-assert_str': 'test_inorder.csv'}, 'requests': {'url': '/wms/instore/bill/saveOrUpdate', 'method': 'post', 'data': {'id': '$csv{id}', 'inbillOrgId': '$csv{inbillOrgId}', 'isConfirmIn': '$csv{isConfirmIn}', 'isDetail': '$csv{isDetail}', 'inbillNumber': '$csv{inbillNumber}', 'inbillCreateTime': '$csv{inbillCreateTime}', 'inbillTime': '$csv{inbillTime}', 'inbillType': '$csv{inbillType}', 'inbillCreateUserId': '$csv{inbillCreateUserId}', 'inbillCreateUserName': '$csv{inbillCreateUserName}', 'inbillCustId': '$csv{inbillCustId}', 'inbillCustomerId': '$csv{inbillCustomerId}', 'inbillOrderNo': '$csv{inbillOrderNo}', 'inbillRemark': '$csv{inbillRemark}', 'inbillCustName': '$csv{inbillCustName}', 'goodsCustomerId': '$csv{goodsCustomerId}', 'infos': {'id': '$csv{id}', 'goodsId': '$csv{goodsId}', 'goodsCustId': '$csv{goodsCustId}', 'goodsCustName': '$csv{goodsCustName}', 'goodsIden': '$csv{goodsIden}', 'goodsCode': '$csv{goodsCode}', 'goodsName': '$csv{goodsName}', 'goodsSpecification': '$csv{goodsSpecification}', 'goodsUnitId': '$csv{goodsUnitId}', 'goodsUnitDesc': '$csv{goodsUnitDesc}', 'goodsBoxSpecification': '$csv{goodsBoxSpecification}', 'goodsManufacturer': '$csv{goodsManufacturer}', 'goodsCategoryId': '$csv{goodsCategoryId}', 'goodsCategoryDesc': '$csv{goodsCategoryDesc}', 'goodsBarcode': '$csv{goodsBarcode}', 'goodsMaxNumber': '$csv{goodsMaxNumber}', 'goodsMinNumber': '$csv{goodsMinNumber}', 'goodsUnitVolume': '$csv{goodsUnitVolume}', 'goodsUnitWeight': '$csv{goodsUnitWeight}', 'goodsTrayArea': '$csv{goodsTrayArea}', 'goodsSingleTrayMaxStart': '$csv{goodsSingleTrayMaxStart}', 'goodsSingleTrayMaxEnd': '$csv{goodsSingleTrayMaxEnd}', 'goodsHalfTrayMaxStart': '$csv{goodsHalfTrayMaxStart}', 'goodsHalfTrayMaxEnd': '$csv{goodsHalfTrayMaxEnd}', 'goodsEnable': '$csv{goodsEnable}', 'goodsEnableDesc': '$csv{goodsEnableDesc}', 'goodsExtendCode': '$csv{goodsExtendCode}', 'goodsOriginPlace': '$csv{goodsOriginPlace}', 'goodsSuite': '$csv{goodsSuite}', 'goodsSuiteDesc': '$csv{goodsSuiteDesc}', 'goodsFrom': '$csv{goodsFrom}', 'goodsFromDesc': '$csv{goodsFromDesc}', 'goodsRemarks': '$csv{goodsRemarks}', 'goodsCreateTime': '$csv{goodsCreateTime}', 'goodsBrandId': '$csv{goodsBrandId}', 'goodsBrandDesc': '$csv{goodsBrandDesc}', 'goodsExpireDate': '$csv{goodsExpireDate}', 'custName': '$csv{custName}', 'goodsSingleTrayDesc': '$csv{goodsSingleTrayDesc}', 'goodsHalfTrayMaxDesc': '$csv{goodsHalfTrayMaxDesc}', 'show': '$csv{show}', 'index': '$csv{index}', 'inbillInfoFreeze': '$csv{inbillInfoFreeze}', 'inbillInfoMaterial': '$csv{inbillInfoMaterial}', 'inbillInfoGoodsId': '$csv{inbillInfoGoodsId}', 'inbillInfoReceiptUserId': '$csv{inbillInfoReceiptUserId}', 'inbillInfoReceiptUserName': '$csv{inbillInfoReceiptUserName}', 'inbillInfoGoodsCount': '$csv{inbillInfoGoodsCount}'}, 'amtInfos': '$csv{amtInfos}'}}, 'validate': {'equals': 2000000, 'assert_str': '$csv{assert_str}'}}"}], "start": 1646039899851, "stop": 1646039899852, "uuid": "674d93e8-0f19-47c9-9ff3-c158e51437b5", "historyId": "c4da4d97e510b8d86c3f17d1699c6a78", "testCaseId": "9277abeeeb2ad6d150b7696993542abb", "fullName": "testcases.test_instore.TestInOrder#test_inorder", "labels": [{"name": "feature", "value": "创建入库单测试"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_instore"}, {"name": "subSuite", "value": "TestInOrder"}, {"name": "host", "value": "HXPSPQYBEZK8JRT"}, {"name": "thread", "value": "654908-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_instore"}]}