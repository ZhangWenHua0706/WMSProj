{"name": "test_instore_bill_import[baseinfo0]", "status": "broken", "statusDetails": {"message": "ValueError: cannot encode objects that are not 2-tuples", "trace": "self = <testcases.test_ordermanage.TestOrderManage object at 0x0000000003CE8CD0>\nlogin = {'ability': [], 'addTopCompanyAuth': 0, 'authorization': 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIyNiIsImp0aSI6IjMxZTc0ZWEwM2Q...YdA7KrVUl_UI3jlttV0', 'avatar': 'https://api.wy56.com/images/2020/04/03/tmb-a8e3255991734992a5be8af7d2d62b8b.jpg', ...}\nbaseinfo = {'base': {'assert_str': 2000000, 'base_url': 'https://api.wy56.com/test/wms-api', 'getcust_url': 'https://api.wy56.com...list', ...}, 'log': {'log_fomat': '[%(asctime)s] %(filename)s->%(funcname)s', 'log_level': 'info', 'log_name': 'log_'}}\n\n    @allure.feature('入库单导入测试')\n    @pytest.mark.parametrize('baseinfo', YamlUtil().read_yamlfile('config.yaml'))\n    def test_instore_bill_import(self, login, baseinfo):\n        method = \"post\"\n        post_type = None\n        last_url = baseinfo[\"base\"][\"import_insotre_bill_url\"]\n        log = LogUtil().log_info(\"入库单导入\")\n        file_name = baseinfo[\"base\"][\"import_insotre_bill_file\"]\n        assert_str = baseinfo[\"base\"][\"assert_str\"]\n        auth_header = YamlUtil().read_extract_yaml(\"extract.yaml\")\n        headers = {\n            \"authorization\":auth_header}\n>       rep = RequestUtil().send_request(method, last_url, file_name, post_type,headers=headers)\n\ntestcases\\test_ordermanage.py:137: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\request_util.py:27: in send_request\n    rep = RequestUtil.session.request(method, url=url, files=data, **kwargs,proxies=proxies,verify=False)\nvenv\\lib\\site-packages\\requests\\sessions.py:515: in request\n    prep = self.prepare_request(req)\nvenv\\lib\\site-packages\\requests\\sessions.py:443: in prepare_request\n    p.prepare(\nvenv\\lib\\site-packages\\requests\\models.py:321: in prepare\n    self.prepare_body(data, files, json)\nvenv\\lib\\site-packages\\requests\\models.py:514: in prepare_body\n    (body, content_type) = self._encode_files(files, data)\nvenv\\lib\\site-packages\\requests\\models.py:128: in _encode_files\n    files = to_key_val_list(files or {})\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nvalue = './data/入库单导入.xls'\n\n    def to_key_val_list(value):\n        \"\"\"Take an object and test to see if it can be represented as a\n        dictionary. If it can be, return a list of tuples, e.g.,\n    \n        ::\n    \n            >>> to_key_val_list([('key', 'val')])\n            [('key', 'val')]\n            >>> to_key_val_list({'key': 'val'})\n            [('key', 'val')]\n            >>> to_key_val_list('string')\n            Traceback (most recent call last):\n            ...\n            ValueError: cannot encode objects that are not 2-tuples\n    \n        :rtype: list\n        \"\"\"\n        if value is None:\n            return None\n    \n        if isinstance(value, (str, bytes, bool, int)):\n>           raise ValueError('cannot encode objects that are not 2-tuples')\nE           ValueError: cannot encode objects that are not 2-tuples\n\nvenv\\lib\\site-packages\\requests\\utils.py:343: ValueError"}, "parameters": [{"name": "baseinfo", "value": "{'base': {'index_url': 'https://www.wy56.com/test/h5/keyi-wms/', 'base_url': 'https://api.wy56.com/test/wms-api', 'login_url': 'https://api.wy56.com/test/wms-api/system/login', 'getcust_url': 'https://api.wy56.com/test/wms-api/order/customer/downList?custName=', 'getgood_url': 'https://api.wy56.com/test/wms-api/wms/base/goods/list', 'getinstorebilllist_url': 'https://api.wy56.com/test/wms-api/wms/instore/bill/list', 'getinstorebillinfo_url': 'https://api.wy56.com/test/wms-api/wms/instore/bill/info/', 'import_insotre_bill_url': 'https://api.wy56.com/test/wms-api/wms/instore/bill/importExcel', 'userName': '上海管理', 'password': 123456, 'login_type': 1, 'pre_auth': 'Bearer', 'assert_str': 2000000, 'import_insotre_bill_file': './data/入库单导入.xls'}, 'log': {'log_name': 'log_', 'log_level': 'info', 'log_fomat': '[%(asctime)s] %(filename)s->%(funcname)s'}}"}], "start": 1647423314118, "stop": 1647423314123, "uuid": "9e772476-0f77-4aa7-b70e-4144896f3a4f", "historyId": "305f99b591f93dedec0fb5bcfd5084dc", "testCaseId": "f5ca5f2acbb57414d8dfc908faeed0e2", "fullName": "testcases.test_ordermanage.TestOrderManage#test_instore_bill_import", "labels": [{"name": "feature", "value": "入库单导入测试"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_ordermanage"}, {"name": "subSuite", "value": "TestOrderManage"}, {"name": "host", "value": "HXPSPQYBEZK8JRT"}, {"name": "thread", "value": "136176-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_ordermanage"}]}