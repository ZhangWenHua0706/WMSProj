{"name": "test_inorder[datainfo0-baseinfo0-caseinfo0]", "status": "failed", "statusDetails": {"message": "pytest_assume.plugin.FailedAssumption: \nOriginal Failure:\n\n>> TypeError(\"'NoneType' object is not subscriptable\")\n\n1 Failed Assumptions:\n\ntestcases\\test_inorder.py:37: AssumptionFailure\n>>\tpytest.assume(assert_str in rep)\nAssertionError: assert False", "trace": "self = <testcases.test_inorder.TestInOrder object at 0x000000000485C8E0>\nbaseinfo = {'base': {'base_url': 'https://api.wy56.com/test/wms-api', 'index_url': 'https://www.wy56.com/test/h5/keyi-wms/', 'pre...: 'Bearer'}, 'log': {'log_fomat': '[%(asctime)s] %(filename)s->%(funcname)s', 'log_level': 'info', 'log_name': 'log_'}}\ncaseinfo = {'name': '$csv{name}', 'parameters': {'name-login-assert_str': 'test_inorder.csv'}, 'requests': {'data': {'amtInfos': ..., 'method': 'post', 'url': '/wms/instore/bill/saveOrUpdate'}, 'validate': {'assert_str': '2000000', 'equals': 2000000}}\ndatainfo = {'\\tgoodsCustomerId': ' 32', '\\tinbillCustName': ' 上海通用汽车广州经销商', '\\tinbillRemark': ' 测试入库备注', 'amtInfos': '', ...}\n\n    @allure.feature('创建入库单测试')\n    @pytest.mark.parametrize('caseinfo', YamlUtil().read_test_yamlfile('test_inorder.yaml'))\n    @pytest.mark.parametrize('baseinfo', YamlUtil().read_yamlfile('config.yaml'))\n    @pytest.mark.parametrize('datainfo', DataUtil().csv_read('test_inorder.csv'))\n    def test_inorder(self, baseinfo, caseinfo, datainfo):\n        method = caseinfo[\"requests\"][\"method\"]\n        post_type = \"json\"\n        last_url = baseinfo[\"base\"][\"base_url\"] + caseinfo[\"requests\"][\"url\"]\n        caseinfo[\"requests\"][\"data\"] = DictUtil().dict_handle_recursive(caseinfo[\"requests\"][\"data\"], datainfo)\n        assert_str = DictUtil().search_key(caseinfo[\"validate\"], datainfo)\n        auth_header = YamlUtil().read_extract_yaml(\"extract.yaml\")\n        headers = {\n            \"authorization\":auth_header }\n        rep = RequestUtil().send_request(method, last_url, caseinfo[\"requests\"][\"data\"], post_type,headers=headers)\n        print(rep)\n        log = LogUtil().log_rec(datainfo[\"name\"])\n        log.info(datainfo[\"story\"])\n        log.info(\"预期测试结果返回:\"+datainfo[\"assert_str\"])\n        log.info(\"实际测试结果返回:\"+str(json.loads(rep)[\"code\"]))\n        allure.dynamic.story(datainfo[\"story\"])\n        pytest.assume(assert_str in rep)\n        if assert_str == str(caseinfo[\"validate\"][\"equals\"]):\n>           auth_header = baseinfo[\"base\"][\"pre_auth\"] + \" \" + json.loads(rep)[\"data\"][\"authorization\"]\nE           pytest_assume.plugin.FailedAssumption: \nE           Original Failure:\nE           \nE           >> TypeError(\"'NoneType' object is not subscriptable\")\nE           \nE           1 Failed Assumptions:\nE           \nE           testcases\\test_inorder.py:37: AssumptionFailure\nE           >>\tpytest.assume(assert_str in rep)\nE           AssertionError: assert False\n\ntestcases\\test_inorder.py:39: FailedAssumption"}, "attachments": [{"name": "log", "source": "b8d8972d-63f7-4e0c-a4c9-88feab985b24-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "datainfo", "value": "{'name': '创建入库单', 'story': '正常下单', 'id': 'null', 'inbillOrgId': ' 27', 'isConfirmIn': ' 0', 'isDetail': ' 0', 'inbillNumber': ' ', 'inbillCreateTime': ' 2022-02-28 09:48:38', 'inbillTime': ' ', 'inbillType': ' 1', 'inbillCreateUserId': ' 26', 'inbillCreateUserName': ' 上海管理', 'inbillCustId': ' 76', 'inbillCustomerId': ' 32', 'inbillOrderNo': ' ', '\\tinbillRemark': ' 测试入库备注', '\\tinbillCustName': ' 上海通用汽车广州经销商', '\\tgoodsCustomerId': ' 32', 'goodsId ': '\\t3079', 'goodsCustId': '\\t 87', 'goodsCustName': '\\t 李群', 'goodsIden': '\\t0003028', 'goodsCode': '\\t lt001', 'goodsName': '\\t 轮胎001', 'goodsSpecification': '\\t10', 'goodsUnitId': '\\t206', 'goodsUnitDesc': '\\t100片/箱', 'goodsBoxSpecification': '\\t', 'goodsManufacturer': '\\t', 'goodsCategoryId': '\\t null', 'goodsCategoryDesc': '\\t', 'goodsBarcode': '\\t', 'goodsMaxNumber': '\\t', 'goodsMinNumber': '\\t', 'goodsUnitVolume': '\\t0.0037', 'goodsUnitWeight': '\\t0.0346', 'goodsTrayArea': '\\t', 'goodsSingleTrayMaxStart': '\\t10', 'goodsSingleTrayMaxEnd': '\\t20', 'goodsHalfTrayMaxStart': '\\t5', 'goodsHalfTrayMaxEnd': '\\t9', 'goodsEnable': '\\t1', 'goodsEnableDesc': '\\t启用', 'goodsExtendCode': '\\tluntai001', 'goodsOriginPlace': '\\t', 'goodsSuite': '\\tnull', 'goodsSuiteDesc': '\\tnull', 'goodsFrom': '\\tnull', 'goodsFromDesc': '\\t', 'goodsRemarks': '\\tlt001备注', 'goodsCreateTime': '\\t2021-12-10 16:25:24', 'goodsBrandId': '\\tnull', 'goodsBrandDesc': '\\t', 'goodsExpireDate': '\\t', 'custName': '\\t 上海通用汽车广州经销商', 'goodsSingleTrayDesc': '\\t 10.0-20.0箱', 'goodsHalfTrayMaxDesc': '\\t5.0-9.0箱', 'show': '\\t false', 'index': '\\t 0', 'inbillInfoFreeze': '\\t 1', 'inbillInfoMaterial': '\\t1', 'inbillInfoGoodsId': '\\t3079', 'inbillInfoReceiptUserId': '\\t 26', 'inbillInfoReceiptUserName': '\\t 上海管理', 'inbillInfoGoodsCount': '\\t 5', 'amtInfos': '', 'assert_str': '2000000'}"}, {"name": "baseinfo", "value": "{'base': {'index_url': 'https://www.wy56.com/test/h5/keyi-wms/', 'base_url': 'https://api.wy56.com/test/wms-api', 'pre_auth': 'Bearer'}, 'log': {'log_name': 'log_', 'log_level': 'info', 'log_fomat': '[%(asctime)s] %(filename)s->%(funcname)s'}}"}, {"name": "caseinfo", "value": "{'name': '$csv{name}', 'parameters': {'name-login-assert_str': 'test_inorder.csv'}, 'requests': {'url': '/wms/instore/bill/saveOrUpdate', 'method': 'post', 'data': {'id': '$csv{id}', 'inbillOrgId': '$csv{inbillOrgId}', 'isConfirmIn': '$csv{isConfirmIn}', 'isDetail': '$csv{isDetail}', 'inbillNumber': '$csv{inbillNumber}', 'inbillCreateTime': '$csv{inbillCreateTime}', 'inbillTime': '$csv{inbillTime}', 'inbillType': '$csv{inbillType}', 'inbillCreateUserId': '$csv{inbillCreateUserId}', 'inbillCreateUserName': '$csv{inbillCreateUserName}', 'inbillCustId': '$csv{inbillCustId}', 'inbillCustomerId': '$csv{inbillCustomerId}', 'inbillOrderNo': '$csv{inbillOrderNo}', 'inbillRemark': '$csv{inbillRemark}', 'inbillCustName': '$csv{inbillCustName}', 'goodsCustomerId': '$csv{goodsCustomerId}', 'infos': {'id': '$csv{id}', 'goodsId': '$csv{goodsId}', 'goodsCustId': '$csv{goodsCustId}', 'goodsCustName': '$csv{goodsCustName}', 'goodsIden': '$csv{goodsIden}', 'goodsCode': '$csv{goodsCode}', 'goodsName': '$csv{goodsName}', 'goodsSpecification': '$csv{goodsSpecification}', 'goodsUnitId': '$csv{goodsUnitId}', 'goodsUnitDesc': '$csv{goodsUnitDesc}', 'goodsBoxSpecification': '$csv{goodsBoxSpecification}', 'goodsManufacturer': '$csv{goodsManufacturer}', 'goodsCategoryId': '$csv{goodsCategoryId}', 'goodsCategoryDesc': '$csv{goodsCategoryDesc}', 'goodsBarcode': '$csv{goodsBarcode}', 'goodsMaxNumber': '$csv{goodsMaxNumber}', 'goodsMinNumber': '$csv{goodsMinNumber}', 'goodsUnitVolume': '$csv{goodsUnitVolume}', 'goodsUnitWeight': '$csv{goodsUnitWeight}', 'goodsTrayArea': '$csv{goodsTrayArea}', 'goodsSingleTrayMaxStart': '$csv{goodsSingleTrayMaxStart}', 'goodsSingleTrayMaxEnd': '$csv{goodsSingleTrayMaxEnd}', 'goodsHalfTrayMaxStart': '$csv{goodsHalfTrayMaxStart}', 'goodsHalfTrayMaxEnd': '$csv{goodsHalfTrayMaxEnd}', 'goodsEnable': '$csv{goodsEnable}', 'goodsEnableDesc': '$csv{goodsEnableDesc}', 'goodsExtendCode': '$csv{goodsExtendCode}', 'goodsOriginPlace': '$csv{goodsOriginPlace}', 'goodsSuite': '$csv{goodsSuite}', 'goodsSuiteDesc': '$csv{goodsSuiteDesc}', 'goodsFrom': '$csv{goodsFrom}', 'goodsFromDesc': '$csv{goodsFromDesc}', 'goodsRemarks': '$csv{goodsRemarks}', 'goodsCreateTime': '$csv{goodsCreateTime}', 'goodsBrandId': '$csv{goodsBrandId}', 'goodsBrandDesc': '$csv{goodsBrandDesc}', 'goodsExpireDate': '$csv{goodsExpireDate}', 'custName': '$csv{custName}', 'goodsSingleTrayDesc': '$csv{goodsSingleTrayDesc}', 'goodsHalfTrayMaxDesc': '$csv{goodsHalfTrayMaxDesc}', 'show': '$csv{show}', 'index': '$csv{index}', 'inbillInfoFreeze': '$csv{inbillInfoFreeze}', 'inbillInfoMaterial': '$csv{inbillInfoMaterial}', 'inbillInfoGoodsId': '$csv{inbillInfoGoodsId}', 'inbillInfoReceiptUserId': '$csv{inbillInfoReceiptUserId}', 'inbillInfoReceiptUserName': '$csv{inbillInfoReceiptUserName}', 'inbillInfoGoodsCount': '$csv{inbillInfoGoodsCount}'}, 'amtInfos': '$csv{amtInfos}'}}, 'validate': {'equals': 2000000, 'assert_str': '$csv{assert_str}'}}"}], "start": 1646024091584, "stop": 1646024092420, "uuid": "4919057d-00bd-4307-9b2d-585efe5b0c3d", "historyId": "beb3fa0825c091f3fb7c6a0f021f979a", "testCaseId": "af95f8b040a6100151be33806a017c5a", "fullName": "testcases.test_inorder.TestInOrder#test_inorder", "labels": [{"name": "story", "value": "正常下单"}, {"name": "feature", "value": "创建入库单测试"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_inorder"}, {"name": "subSuite", "value": "TestInOrder"}, {"name": "host", "value": "HXPSPQYBEZK8JRT"}, {"name": "thread", "value": "643920-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_inorder"}]}